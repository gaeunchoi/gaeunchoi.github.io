<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://gaeunchoi.github.io/</id><title>가람쥐's Blog</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2023-03-20T11:16:51+09:00</updated> <author> <name>gaanii</name> <uri>https://gaeunchoi.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://gaeunchoi.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://gaeunchoi.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 gaanii </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[Python] BOJ 5430 AC</title><link href="https://gaeunchoi.github.io/posts/BOJ5430/" rel="alternate" type="text/html" title="[Python] BOJ 5430 AC" /><published>2022-07-28T17:41:00+09:00</published> <updated>2022-07-28T17:41:00+09:00</updated> <id>https://gaeunchoi.github.io/posts/BOJ5430/</id> <content src="https://gaeunchoi.github.io/posts/BOJ5430/" /> <author> <name>gaanii</name> </author> <category term="Study" /> <category term="BOJ" /> <summary> [BOJ] 백준 알고리즘 5430 AC 아래 백준 로고를 클릭하면 해당 문제로 이동합니다 😀 풀이 구현은 생각보다 간단함 하지만 시간복잡도를 최대한 줄여야 하는 문제라 줄일 부분을 최소한으로 만드는게 머리아팠다 .. ​ 입력받은 p에서 ‘R’이 있으면 주어진 배열을 reverse, ‘D’가 있으면 첫번째 수를 버리는 것이다. 이떄 ‘R’을 입력 받을 때 마다 reverse를 해주면 당연히 ~ 시간초과가 뜬다 .. ​ 그래서 생각해 낸건 ‘R’을 입력 받을 때 마다 flag += 1을 해주고 마지막에 출력 전에만 reverse를 진행해줬다. ​ 그리고 ‘D’를 입력 받을 때도 생각을 해야하는데 이전에 ‘R’ 입력이 있었으면 pop()으로 맨뒤에 숫자를 빼주고, ‘R’ 입력... </summary> </entry> <entry><title>[Python] BOJ 2477 참외밭</title><link href="https://gaeunchoi.github.io/posts/BOJ2477/" rel="alternate" type="text/html" title="[Python] BOJ 2477 참외밭" /><published>2022-07-28T17:32:00+09:00</published> <updated>2022-07-28T17:32:00+09:00</updated> <id>https://gaeunchoi.github.io/posts/BOJ2477/</id> <content src="https://gaeunchoi.github.io/posts/BOJ2477/" /> <author> <name>gaanii</name> </author> <category term="Study" /> <category term="BOJ" /> <summary> [BOJ] 백준 알고리즘 2477 참외밭 아래 백준 로고를 클릭하면 해당 문제로 이동합니다 😀 풀이 기본적인 아이디어는 가장 큰 사각형에서 가장 작은 사각형의 넓이를 빼는 것 ! 작은 사각형의 넓이를 구하는게 관건인 문제였다. 입력을 모두 받은 후에 가로방향에서 최장길이, 세로방향에서 최장길이를 찾아서 변수에 따로 저장해둔다. 이 때, 그때의 인덱스 값을 저장해둬야 함 ! ​ 가로를 먼저 생각해봤을때, 인덱스가 1인 160이 최장길이로 나오는데 이 때 인덱스 1을 기준으로 인덱스+1을 한 값은 30, 인덱스-1을 한 값은 50이다. 이를 빼서 절댓값을 취해주면 세로방향의 최단길이가 나온다. ​ 세로도 똑같이 생각을 해보면 인덱스가 0인 50이 최장길이로 나오고, 인덱스 ... </summary> </entry> <entry><title>[Swift] 구조체와 클래스</title><link href="https://gaeunchoi.github.io/posts/swift-class/" rel="alternate" type="text/html" title="[Swift] 구조체와 클래스" /><published>2022-02-03T19:22:00+09:00</published> <updated>2022-02-03T19:22:00+09:00</updated> <id>https://gaeunchoi.github.io/posts/swift-class/</id> <content src="https://gaeunchoi.github.io/posts/swift-class/" /> <author> <name>gaanii</name> </author> <category term="Programming" /> <category term="Swift" /> <summary> 본 게시물은 ‘스위프트 프로그래밍(3판)’의 9장 구조체와 클래스를 정리하며 작성하는 게시글입니다. 아래 작성된 코드는 yagom님 swift 기본 문법의 코드를 참고했습니다. 구조체 1. 개념 하나의 새로운 사용자 정의 데이터 타입이라고 말할 수 있다. 2. 정의 struct 키워드를 사용하여 정의할 수 있다. struct 구조체이름 { /* 프로퍼티와 메서드들 */ } // 구조체 예시 struct Student { var name: String var `class`: String // 키워드도 `로 묶어주면 사용 가능 } 3. 구조체 인스턴스 생성 및 초기화 구조체 정의 후에, 인스턴스를 생성하고 초기화하... </summary> </entry> <entry><title>[Python] BOJ 10989 수 정렬하기 3</title><link href="https://gaeunchoi.github.io/posts/BOJ10989/" rel="alternate" type="text/html" title="[Python] BOJ 10989 수 정렬하기 3" /><published>2022-01-30T18:49:00+09:00</published> <updated>2022-01-30T18:49:00+09:00</updated> <id>https://gaeunchoi.github.io/posts/BOJ10989/</id> <content src="https://gaeunchoi.github.io/posts/BOJ10989/" /> <author> <name>gaanii</name> </author> <category term="Study" /> <category term="BOJ" /> <summary> [BOJ] 백준 알고리즘 10989 수 정렬하기 3 아래 백준 로고를 클릭하면 해당 문제로 이동합니다 😀 풀이 해당 문제는 메모리가 제한되어 있다. 처음엔 퀵소트를 사용하여 코드를 작성했지만 메모리초과로 실패하였다 .. 입력받은 값들을 계속 저장하여 메모리를 사용하는 것이 아니라, 원래 만들어놓은 리스트를 이용하여 값을 정렬하고 카운팅할 수 있지 않을까 생각했다. 코드는 다음과 같다. 추가 ) input() 말고 sys.stdin.readline()을 사용해야 통과한 문제이다 .. 두 개의 차이는 다음에 포스팅 할게용 :) import sys N = int(sys.stdin.readline()) tmp = [] nums = [0 for _ in range(10001)] fo... </summary> </entry> <entry><title>[Python] BOJ 2751 수 정렬하기 2</title><link href="https://gaeunchoi.github.io/posts/BOJ2751/" rel="alternate" type="text/html" title="[Python] BOJ 2751 수 정렬하기 2" /><published>2022-01-30T18:41:00+09:00</published> <updated>2022-01-30T18:41:00+09:00</updated> <id>https://gaeunchoi.github.io/posts/BOJ2751/</id> <content src="https://gaeunchoi.github.io/posts/BOJ2751/" /> <author> <name>gaanii</name> </author> <category term="Study" /> <category term="BOJ" /> <summary> [BOJ] 백준 알고리즘 2751 수 정렬하기 2 아래 백준 로고를 클릭하면 해당 문제로 이동합니다 😀 풀이 해당 문제는 시간 복잡도가 O(nlogn)인 알고리즘으로만 풀 수 있다. python에 내장되어 있는 sort는 O(nlogn)의 시간복잡도를 가지므로, 이전 문제의 첫 번째 풀이와 동일하다. N = int(input()) nums = [] for _ in range(N): nums.append(int(input())) nums.sort() for i in nums: print(i) 결과 </summary> </entry> </feed>
